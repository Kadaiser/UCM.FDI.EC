/*-----------------------------------------------------------------
**
**  Fichero:
**    misc.asm  10/6/2014
**
**    Estructura de Computadores
**    Dpto. de Arquitectura de Computadores y Automática
**    Facultad de Informática. Universidad Complutense de Madrid
**
**  Propósito:
**    Contiene las implementaciones de las funciones en ensamblador
**    usadas por el programa principal
**
**  Notas de diseño:
**
**---------------------------------------------------------------*/

.global contarUnos
.global rgb2gray
.global rgb2gray2
.text
/*-----------------------------------------------------------------
**
**  Fichero:
**    misc.asm  10/6/2014
**
**    Estructura de Computadores
**    Dpto. de Arquitectura de Computadores y Automática
**    Facultad de Informática. Universidad Complutense de Madrid
**
**  Propósito:
**    Contiene las implementaciones de las funciones en ensamblador
**    usadas por el programa principal
**
**  Notas de diseño:
**
**---------------------------------------------------------------*/

.global rgb2grayASM
.global computeHistogramASM

.text


rgb2grayASM:
  		push {r4,fp,lr}
  		add fp, sp, #8

  		ldrb r1,[r0]
  		ldr r2,=3483
  		mul r3,r2,r1

  		ldrb r1,[r0,#1]
  		ldr r2,=11718
  		mul r4,r2,r1
  		add r3,r3,r4

  		ldrb r1,[r0,#2]
  		ldr r2,=1183
  		mul r4,r2,r1
  		add r3,r3,r4

		mov r0,r3
		bl div16384

		sub sp,fp,#8
		pop {r4,fp,lr}
		bx lr

div16384:
		push {fp}
		lsr r0,r0,#14
		pop {fp}
		bx lr

computeHistogramASM: push {r4-r8,fp}
					 add fp,sp,#20
					 mov r4,#0
					 mov r5,#0
					 mov r6,#0
for1:				 cmp r4,#255
					 bgt salirfor1
				 	 strh r5,[r1,r6]
				 	 add r4,r4,#1
				 	 add r6,r6,#2
				 	 b for1
salirfor1:			 mov r4,#0
					 mov r8,#2
for2:				 cmp r4,r2
	      			 bge finfor2
	      			 mov r5,#0
for3:			     cmp r5,r3
					 bge finfor3
					 mul r6,r4,r3
					 add r6,r6,r5
					 ldrb r6,[r0,r6]
					 mul r7,r6,r8
					 ldrh r6,[r1,r7]
					 add r6,r6,#1
					 strh r6,[r1,r7]
					 add r5,r5,#1
					 b for3
finfor3:			 add r4,r4,#1
					 b for2
finfor2:             sub sp,fp,#20
					 pop {r4-r8,fp}
					 mov pc,lr


