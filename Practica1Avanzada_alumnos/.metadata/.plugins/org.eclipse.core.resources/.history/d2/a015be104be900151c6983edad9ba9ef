	.global rgb2gray
	.global gaussian

	.equ COEF1, 3483
	.equ COEF2, 11718
	.equ COEF3, 1183
	.equ DIVI, 16384

	.text


//----------------------RGB2GRAY ARM METHOD----------------------------------//
// PARAM R0		: DIRECCION DE UN ELEMNTO PIXELRGB DE 3 UNSIGNED CHAR
// RETURN R0	: unsigned char
rgb2gray:
		PUSH {R4, R5, R6, R7, R8}	//
		LDR R4, =COEF1
		LDR R5, =COEF2
		LDR R6, =COEF3

		LDRB R1,[R0,#2]			//R1 almacena el valor del elemento R (LITTLE ENDIAN)
		MUL R7,R1,R4				//R7 = R*3483
		LDRB R1,[R0,#1] 			//R1 almacena el valor del elemento G (LITTLE ENDIAN)
		MUL R8,R1,R5				//R8 = G*11718
		ADD R7,R7,R8				//R7 = (R*3483) + (G*11718)
		LDRB R1,[R0] 				//R1 almacena el valor del elemento B (LITTLE ENDIAN)
		MUL R8,R1,R6				//R8 = G*1183
		MOV R0,R5					//PREPARAMOS EL PARAMETRO PARA LA SUBRUTINA
		ADD R7,R7,R8				//R7 = (R*3483) + (G*11718) + (B*1183)
		MOV R0,R7
		PUSH {LR}
		BL divdiv16384				//LLAMADA A SUBRUTINA R0 = (R*3483) + (G*11718) + (B*1183)
		POP {LR}
		POP {PC, R4, R5,R6, R7, R8}
		MOV PC, LR

div16384: 
		//PUSH{R4,R5}			//iNECESARIOS A LA VUELTA
		MOV R1, #0				//RESULTADO DE LA DIVISION
		LDR R4, =DIVI			//R4 DIRECCION ETIQUETA
		LDR R5,[R4]				//R5 = 16384

	bucle:
		CMP R0, R5
		BGT else
		SUB R0,R0,R5
		ADD R1,R1, #1
		B bucle
	else:
		MOV R0, R1
		//POP{R4,R5}
		MOV PC,LR

//----------------------GAUSSIAN ARM METHOD----------------------------------//

gaussian:
		PUSH{}
		POP{}
		MOV PC, LR

		.end
